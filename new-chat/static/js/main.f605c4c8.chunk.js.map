{"version":3,"sources":["components/InfoBar/InfoContact/index.js","components/InfoBar/index.js","components/App/AnimateInfoBar/index.js","utils/scrollChatToBottom.js","components/Main/Header/SearchMessage/InputBox/index.js","redux/actions/chat.js","components/Main/Header/SearchMessage/index.js","components/Main/Header/Setting/index.js","components/Main/Header/Fullname/index.js","components/Main/Header/index.js","components/Main/Chat/Message/MessageInBox/index.js","components/Main/Chat/Message/MessageOutBox/index.js","components/Main/Chat/Message/MessageInfo/index.js","components/Main/Chat/Message/index.js","components/Main/Chat/index.js","components/Main/Footer/Micro/index.js","components/Main/Footer/Send/index.js","components/Main/Footer/index.js","components/App/NoSelected/index.js","components/Main/index.js","components/Sidebar/RecentChats/Contact/LastMessage/index.js","components/Sidebar/RecentChats/Contact/ContactOnline/index.js","components/Sidebar/RecentChats/Contact/index.js","components/Sidebar/RecentChats/PreloaderContact/index.js","components/Sidebar/RecentChats/index.js","components/Sidebar/SearchContact/index.js","redux/actions/contacts.js","components/Sidebar/index.js","components/App/index.js","redux/actions/profile.js","redux/reducers/profile.js","redux/reducers/contacts.js","redux/reducers/chat.js","redux/reducers/application.js","redux/index.js","index.js"],"names":["InfoContact","paramsId","useParams","id","userdata","useSelector","state","contacts","items","find","item","_id","className","fullname","username","InfoBar","socials","instagram","twitter","facebook","AnimateInfoBar","showBar","chat","CSSTransition","in","timeout","unmountOnExit","scrollChatToBottom","document","getElementById","scrollTop","scrollHeight","InputBox","showSearch","searchLine","dispatch","useDispatch","onChange","e","type","payload","target","value","trim","length","onClick","SearchMessage","Setting","useState","animate","setAnimate","useHotkeys","href","Fullname","loading","online","Header","MessageInBox","message","content","dayjs","time","format","MessageOutBox","read","MessageInfo","Message","profileId","profile","toUserId","Chat","messages","enteredText","filter","toLowerCase","indexOf","map","key","Micro","messageLine","Send","onSend","Footer","myId","handleSend","contactId","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","sendMessage","placeholder","onKeyDown","keyCode","NoSelected","Main","chatId","useEffect","LastMessage","lastMessage","substring","ContactOnline","contact","Contact","contactHover","to","activeClassName","PreloaderContact","circle","height","width","RecentChats","preloader","Array","fill","_","index","SearchContact","Sidebar","App","path","initialState","waitingMessage","showChat","rootReducer","combineReducers","action","application","logger","createLogger","collapsed","diff","store","createStore","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.f605c4c8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./info-contact.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction InfoContact() {\r\n  const paramsId = useParams().id;\r\n\r\n  const userdata = useSelector((state) =>\r\n    state.contacts.items.find((item) => item._id === paramsId)\r\n  );\r\n\r\n  return (\r\n    <div className=\"info-contact\">\r\n      <div className=\"big-avatar\">{userdata?.fullname[0]}</div>\r\n      <div className=\"info-fullname\">{userdata?.fullname}</div>\r\n      <div className=\"nickname\">@{userdata?.username}</div>\r\n      <div className=\"connect\">\r\n        <span className=\"material-icons icons-connect call\">call</span>\r\n        <span className=\"material-icons icons-connect videocam\">videocam</span>\r\n        <span className=\"material-icons icons-connect email\">email</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoContact;\r\n","import React from \"react\";\r\nimport InfoContact from \"./InfoContact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./info-bar.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction InfoBar() {\r\n  const paramsId = useParams().id;\r\n\r\n  const userdata = useSelector((state) =>\r\n    state.contacts.items.find((item) => item._id === paramsId)\r\n  );\r\n  return (\r\n    <div className=\"info-bar\">\r\n      <div className=\"inner-info-bar\">\r\n        <InfoContact />\r\n        <div className=\"social-block\">\r\n          <div className=\"social\">Social</div>\r\n          <div className=\"messengers\">\r\n            {userdata?.socials?.instagram && (\r\n              <div className=\"instagram\">\r\n                <i className=\"ico fab fa-instagram\" />\r\n                <span className=\"nick-messenger\">\r\n                  {userdata.socials.instagram}\r\n                </span>\r\n              </div>\r\n            )}\r\n            {userdata?.socials?.twitter && (\r\n              <div className=\"twitter\">\r\n                <i className=\"ico fab fa-twitter\" />\r\n                <span className=\"nick-messenger\">\r\n                  {userdata.socials.twitter}\r\n                </span>\r\n              </div>\r\n            )}\r\n            {userdata?.socials?.facebook && (\r\n              <div className=\"facebook\">\r\n                <i className=\"ico fab fa-facebook-f\" />\r\n                <span className=\"nick-messenger\">\r\n                  {userdata.socials.facebook}\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoBar;\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useSelector } from \"react-redux\";\r\nimport InfoBar from \"../../InfoBar\";\r\n\r\nfunction AnimateInfoBar() {\r\n  const showBar = useSelector((state) => state.chat.showBar);\r\n\r\n  return (\r\n    <CSSTransition in={showBar} timeout={500} unmountOnExit>\r\n      <InfoBar />\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nexport default AnimateInfoBar;\r\n","export default function scrollChatToBottom() {\r\n  let chat = document.getElementById(\"chat\");\r\n  chat.scrollTop = chat.scrollHeight;\r\n}\r\n","import React from \"react\";\r\nimport \"./input-box.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearInput, setSearchLine } from \"../../../../../redux/actions/chat\";\r\n\r\nfunction InputBox() {\r\n  const showSearch = useSelector((state) => state.chat.showSearch);\r\n  const searchLine = useSelector((state) => state.chat.searchLine);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleString = (e) => dispatch(setSearchLine(e.target.value));\r\n\r\n  const handleClear = () => dispatch(clearInput());\r\n\r\n  return (\r\n    <>\r\n      {showSearch && (\r\n        <input\r\n          className=\"search-message-input\"\r\n          onChange={handleString}\r\n          value={searchLine}\r\n        />\r\n      )}\r\n      {searchLine.trim().length > 0 && (\r\n        <span className=\"clear-input material-icons\" onClick={handleClear}>\r\n          close\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InputBox;\r\n","import scrollChatToBottom from \"../../utils/scrollChatToBottom\";\r\n\r\nexport function loadChat(id, myId) {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"chat/load/start\" });\r\n\r\n    fetch(`https://api.intocode.ru:8001/api/messages/${myId}/${id}`)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({\r\n          type: \"chat/load/success\",\r\n          payload: json,\r\n        });\r\n      });\r\n  };\r\n}\r\nexport function showSearchInput() {\r\n  return { type: \"search/show\" };\r\n}\r\n\r\nexport function setSearchLine(value) {\r\n  return {\r\n    type: \"search/line\",\r\n    payload: value,\r\n  };\r\n}\r\n\r\nexport function clearInput() {\r\n  return { type: \"input/clear\" };\r\n}\r\n\r\nexport function writeMessage(value) {\r\n  return {\r\n    type: \"message/write\",\r\n    payload: value,\r\n  };\r\n}\r\n\r\nexport function showInfoBar() {\r\n  return {\r\n    type: \"bar/show\",\r\n  };\r\n}\r\n\r\nexport function sendMessage(myId, contactId, content) {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"message/send/start\" });\r\n\r\n    fetch(\"https://api.intocode.ru:8001/api/messages\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        myId,\r\n        contactId,\r\n        content,\r\n        type: \"text\",\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({\r\n          type: \"message/send/success\",\r\n          payload: json,\r\n        });\r\n\r\n        scrollChatToBottom();\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./search-message.css\";\r\nimport { showSearchInput } from \"../../../../redux/actions/chat\";\r\nimport InputBox from \"./InputBox\";\r\n\r\nfunction SearchMessage() {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSearch = () => dispatch(showSearchInput());\r\n\r\n  return (\r\n    <div className=\"search-message\">\r\n      <span className=\"icon-search-chat material-icons\" onClick={handleSearch}>\r\n        search\r\n      </span>\r\n      <div className=\"header-input-container\">\r\n        <InputBox />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchMessage;\r\n","import React, { useState } from 'react'\r\nimport { showInfoBar } from \"../../../../redux/actions/chat\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHotkeys } from \"react-hotkeys-hook\";\r\nimport \"./setting.css\";\r\n\r\nfunction Setting() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [animate, setAnimate] = useState(null);\r\n\r\n  const showBar = useSelector(state => state.chat.showBar);\r\n\r\n  const handleShow = () => {\r\n    if (showBar) {\r\n      setAnimate('setting-rotate');\r\n    } else {\r\n      setAnimate('setting-rotate-back');\r\n    }\r\n    dispatch(showInfoBar())\r\n  };\r\n\r\n  useHotkeys(\"shift+p\", () => dispatch(showBar()));\r\n\r\n  return (\r\n    <div className=\"setting\">\r\n      <a className=\"github-link\" href=\"https://github.com/Amazaev77/new-chat\">\r\n        <i className=\"github fab fa-github\"></i>\r\n      </a>\r\n      <span className={`setting-span material-icons ${animate}`} onClick={handleShow}>\r\n        settings\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Setting;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./fullname.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Fullname() {\r\n  const loading = useSelector((state) => state.chat.loading);\r\n\r\n  const paramsId = useParams().id;\r\n  const userdata = useSelector((state) =>\r\n    state.contacts.items.find((item) => item._id === paramsId)\r\n  );\r\n\r\n  return (\r\n    <div className=\"fullname\">\r\n      <div className=\"name-container\">\r\n        <div className=\"name-chat\">\r\n          {loading ? (\r\n            <div className=\"updating-box\">\r\n              <div className=\"autorenew-box\">\r\n                <span className=\"autorenew material-icons\">autorenew</span>\r\n              </div>\r\n              <div className=\"updating\">Updating...</div>\r\n            </div>\r\n          ) : (\r\n            userdata?.fullname\r\n          )}\r\n        </div>\r\n        {userdata?.online && <div className=\"online-chat\"></div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Fullname;\r\n","import React from \"react\";\r\nimport SearchMessage from \"./SearchMessage\";\r\nimport Setting from \"./Setting\";\r\nimport Fullname from \"./Fullname\";\r\nimport \"./header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <SearchMessage />\r\n      <Fullname />\r\n      <Setting />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport dayjs from \"dayjs\";\r\nimport \"./message-in-box.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction MessageInBox({ message }) {\r\n  const paramsId = useParams().id;\r\n  const userdata = useSelector((state) =>\r\n    state.contacts.items.find((item) => item._id === paramsId)\r\n  );\r\n\r\n  return (\r\n    <div className=\"message-in-box\">\r\n      <div className=\"inner-message-in\">\r\n        <div className=\"avatar-chat\">{userdata.fullname[0]}</div>\r\n        <div className=\"message-in\">\r\n          {message.content}\r\n          <div className=\"in-time\">{dayjs(message.time).format(\"HH:mm\")}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageInBox;\r\n","import React from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport \"./message-out-box.css\";\r\n\r\nfunction MessageOutBox({ message }) {\r\n  return (\r\n    <div className=\"message-out-box\">\r\n      <div className=\"message-out\">{message.content}</div>\r\n      <div className=\"out-time-box\">\r\n        <span className=\"out-time\">{dayjs(message.time).format(\"HH:mm\")}</span>\r\n        {message.read ? (\r\n          <span className=\"check material-icons\">done_all</span>\r\n        ) : (\r\n          <span className=\"check material-icons\">done</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageOutBox;\r\n","import React from \"react\";\r\nimport \"./message-info.css\";\r\n\r\nfunction MessageInfo({ message }) {\r\n  if (message.type !== \"info\") {\r\n    return null;\r\n  }\r\n  return <div className=\"message-info\">{message.content}</div>;\r\n}\r\n\r\nexport default MessageInfo;\r\n","import React from \"react\";\r\nimport MessageInBox from \"./MessageInBox\";\r\nimport MessageOutBox from \"./MessageOutBox\";\r\nimport MessageInfo from \"./MessageInfo\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./message.css\";\r\n\r\nfunction Message({ message }) {\r\n  const profileId = useSelector((state) => state.profile._id);\r\n\r\n  if (message.type === \"info\") {\r\n    return <MessageInfo message={message} />;\r\n  }\r\n\r\n  if (profileId === message.toUserId) {\r\n    return <MessageInBox message={message} />;\r\n  }\r\n\r\n  return <MessageOutBox message={message} />;\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./chat.css\";\r\n\r\nfunction Chat() {\r\n  const messages = useSelector((state) => {\r\n    const enteredText = state.chat.searchLine;\r\n\r\n    return state.chat.messages.filter(\r\n      (item) =>\r\n        item.content.toLowerCase().indexOf(enteredText.toLowerCase()) !== -1\r\n    );\r\n  });\r\n\r\n  const loading = useSelector((state) => state.chat.loading);\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      {messages.map((item) => (\r\n        <div key={item._id} className=\"message\">\r\n          <Message message={item} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./micro.css\";\r\n\r\nfunction Micro() {\r\n  const messageLine = useSelector((state) => state.chat.messageLine);\r\n\r\n  if (messageLine !== \"\") {\r\n    return null;\r\n  }\r\n\r\n  return <span className=\"material-icons\">mic</span>;\r\n}\r\n\r\nexport default Micro;\r\n","import React from \"react\";\r\nimport \"./send.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Send({ onSend }) {\r\n  const messageLine = useSelector((state) => state.chat.messageLine);\r\n\r\n  if (messageLine === \"\") {\r\n    return null;\r\n  }\r\n  return (\r\n    <span className=\"material-icons\" onClick={onSend}>\r\n      send\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Send;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { writeMessage } from \"../../../redux/actions/chat\";\r\nimport Micro from \"./Micro\";\r\nimport Send from \"./Send\";\r\nimport \"./footer.css\";\r\nimport { sendMessage } from \"../../../redux/actions/chat\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Footer() {\r\n  const messageLine = useSelector((state) => state.chat.messageLine);\r\n  const myId = useSelector((state) => state.profile._id);\r\n  const dispatch = useDispatch();\r\n  const paramsId = useParams().id;\r\n\r\n  function handleMessage(e) {\r\n    dispatch(writeMessage(e.target.value));\r\n  }\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.keyCode === 13) {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  const handleSend = () => {\r\n    dispatch(sendMessage(myId, paramsId, messageLine));\r\n  };\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer-inner\">\r\n        <input\r\n          className=\"send-message-input\"\r\n          placeholder=\"Write a message\"\r\n          value={messageLine}\r\n          onChange={handleMessage}\r\n          onKeyDown={handleKeyDown}\r\n        />\r\n        <div className=\"send\">\r\n          <span className=\"clip material-icons\">attach_file</span>\r\n          <Micro />\r\n          <Send onSend={handleSend} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./no-selected.css\";\r\n\r\nfunction NoSelected() {\r\n  return (\r\n    <div className=\"no-selected\">Please, select a chat to start messaging</div>\r\n  );\r\n}\r\n\r\nexport default NoSelected;\r\n","import React, { useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Chat from \"./Chat\";\r\nimport Footer from \"./Footer\";\r\nimport \"./main.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadChat } from \"../../redux/actions/chat\";\r\nimport NoSelected from \"../App/NoSelected\";\r\nimport scrollChatToBottom from \"../../utils/scrollChatToBottom\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Main() {\r\n  const dispatch = useDispatch();\r\n\r\n  const profileId = useSelector((state) => state.profile._id);\r\n  const loading = useSelector((state) => state.profile.loading);\r\n\r\n  const chatId = useParams().id;\r\n\r\n  useEffect(() => {\r\n    if (chatId && !loading) {\r\n      dispatch(loadChat(chatId, profileId));\r\n      scrollChatToBottom();\r\n    }\r\n  }, [chatId, profileId, dispatch, loading]);\r\n\r\n  if (!chatId) {\r\n    return <NoSelected />;\r\n  }\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"inner-main\" id=\"chat\">\r\n        <Header />\r\n        <Chat />\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport \"./last-message.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction LastMessage({ lastMessage }) {\r\n  if (!lastMessage) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"last-message\">\r\n      {lastMessage.content.length > 12\r\n        ? lastMessage.content.substring(0, 12) + \"...\"\r\n        : lastMessage.content}\r\n    </div>\r\n  );\r\n}\r\n\r\nLastMessage.propTypes = {\r\n  lastMessage: PropTypes.object\r\n}\r\n\r\nexport default LastMessage;\r\n","import React from \"react\";\r\nimport \"./contactOnline.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ContactOnline({ contact }) {\r\n  if (!contact.online) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"online-contact\" />;\r\n}\r\n\r\nContactOnline.propTypes = {\r\n  contact: PropTypes.object\r\n}\r\n\r\nexport default ContactOnline;\r\n","import React from \"react\";\r\nimport LastMessage from \"./LastMessage\";\r\nimport dayjs from \"dayjs\";\r\nimport \"./contact.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ContactOnline from \"./ContactOnline\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Contact({ contact }) {\r\n  const time = dayjs(contact.lastMessage?.time).format(\"HH:mm\");\r\n\r\n  const loading = useSelector((state) => state.contacts.loading);\r\n\r\n  const contactHover = !loading && \"contact-hover\";\r\n\r\n  return (\r\n    <NavLink\r\n      to={`/${contact._id}`}\r\n      activeClassName=\"bgc-white\"\r\n      className={\"contact \" + contactHover}\r\n    >\r\n      <div className=\"avatar\">\r\n        {contact?.fullname[0]}\r\n        <ContactOnline contact={contact} />\r\n      </div>\r\n      <div className=\"name-mess\">\r\n        <div className=\"name\">{contact.fullname}</div>\r\n        <LastMessage lastMessage={contact.lastMessage} />\r\n      </div>\r\n      <div className=\"time-last-message\">{time}</div>\r\n    </NavLink>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport \"./preloader-contact.css\";\r\n\r\nfunction PreloaderContact() {\r\n  return (\r\n    <div className=\"contact\">\r\n      <div className=\"circle-preloader\">\r\n        <Skeleton circle={true} height={50} width={50} />\r\n      </div>\r\n      <div className=\"name-mess\">\r\n        <div className=\"name\">\r\n          <Skeleton />\r\n        </div>\r\n        <div className=\"mess\">\r\n          <Skeleton />\r\n        </div>\r\n      </div>\r\n      <div className=\"time\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PreloaderContact;\r\n","import React from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PreloaderContact from \"./PreloaderContact\";\r\nimport \"./recent-chats.css\";\r\n\r\nfunction RecentChats() {\r\n  const loading = useSelector((state) => state.contacts.loading);\r\n\r\n  const contacts = useSelector((state) => {\r\n    const enteredText = state.contacts.enteredText;\r\n\r\n    return state.contacts.items.filter(\r\n      (contact) =>\r\n        contact.fullname.toLowerCase().indexOf(enteredText.toLowerCase()) !== -1\r\n    );\r\n  });\r\n\r\n  const preloader = new Array(7)\r\n    .fill()\r\n    .map((_, index) => <PreloaderContact key={index} />);\r\n\r\n  return (\r\n    <div className=\"recent-chats\">\r\n      {loading\r\n        ? preloader\r\n        : contacts.map((item) => <Contact key={item._id} contact={item} />)}\r\n    </div>\r\n  );\r\n}\r\nexport default RecentChats;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setSearchContact } from \"../../../redux/actions/contacts\";\r\nimport \"./search-contact.css\";\r\n\r\nfunction SearchContact() {\r\n  const enteredText = useSelector((state) => state.contacts.enteredText);\r\n  const dispatch = useDispatch();\r\n\r\n  const searchChangeHandler = (e) => {\r\n    dispatch(setSearchContact(e.target.value));\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-contact\">\r\n      <input\r\n        className=\"input-search-contact\"\r\n        placeholder=\"Search contact\"\r\n        value={enteredText}\r\n        onChange={searchChangeHandler}\r\n      />\r\n      <span className=\"icon-search-sidebar material-icons\">search</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchContact;\r\n","export function loadContacts() {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"contacts/load/start\" });\r\n\r\n    fetch(\"https://api.intocode.ru:8001/api/contacts\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({\r\n          type: \"contacts/load/success\",\r\n          payload: json,\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function setSearchContact(string) {\r\n  return {\r\n    type: \"contact/search/set\",\r\n    payload: string,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport RecentChats from \"./RecentChats\";\r\nimport SearchContact from \"./SearchContact\";\r\nimport \"./sidebar.css\";\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"inner\">\r\n        <SearchContact />\r\n        <RecentChats />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Sidebar;\r\n","import React, { useEffect } from \"react\";\r\nimport { loadContacts } from \"../../redux/actions/contacts\";\r\nimport { loadProfile } from \"../../redux/actions/profile\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AnimateInfoBar from \"./AnimateInfoBar\";\r\nimport Main from \"../Main\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport \"./app.css\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadContacts());\r\n    dispatch(loadProfile());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Switch>\r\n        <Route path=\"/:id?\">\r\n          <Sidebar />\r\n          <Main />\r\n          <AnimateInfoBar />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export function loadProfile() {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"profile/load/start\" });\r\n\r\n    fetch(\"https://api.intocode.ru:8001/api/profile\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({\r\n          type: \"profile/load/success\",\r\n          payload: json,\r\n        });\r\n      });\r\n  };\r\n}\r\n","const initialState = {\r\n  _id: null,\r\n  loading: true,\r\n};\r\n\r\nexport default function profile(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"profile/load/start\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case \"profile/load/success\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        _id: action.payload._id,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  loading: true,\r\n  items: [],\r\n  enteredText: \"\",\r\n};\r\n\r\nexport default function contacts(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"contacts/load/start\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case \"contacts/load/success\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        items: action.payload,\r\n      };\r\n    case \"contact/search/set\":\r\n      return {\r\n        ...state,\r\n        enteredText: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  loading: true,\r\n  messages: [],\r\n  showSearch: false,\r\n  searchLine: \"\",\r\n  messageLine: \"\",\r\n  showBar: false,\r\n  waitingMessage: true,\r\n};\r\n\r\nexport default function chat(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"chat/load/start\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case \"chat/load/success\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        messages: action.payload,\r\n      };\r\n\r\n    case \"search/show\":\r\n      return {\r\n        ...state,\r\n        showSearch: !state.showSearch,\r\n      };\r\n\r\n    case \"search/line\":\r\n      return {\r\n        ...state,\r\n        searchLine: action.payload,\r\n      };\r\n\r\n    case \"input/clear\":\r\n      return {\r\n        ...state,\r\n        searchLine: \"\",\r\n      };\r\n    case \"message/write\":\r\n      return {\r\n        ...state,\r\n        messageLine: action.payload,\r\n      };\r\n    case \"bar/show\":\r\n      return {\r\n        ...state,\r\n        showBar: !state.showBar,\r\n      };\r\n    case \"message/send/start\":\r\n      return {\r\n        ...state,\r\n        waitingMessage: true,\r\n      };\r\n    case \"message/send/success\":\r\n      return {\r\n        ...state,\r\n        waitingMessage: false,\r\n        messages: [...state.messages, action.payload],\r\n        messageLine: \"\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  showChat: true,\r\n};\r\n\r\nexport default function application(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"chat/load/start\":\r\n      return {\r\n        ...state,\r\n        showChat: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { applyMiddleware, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport profile from \"./reducers/profile\";\r\nimport contacts from \"./reducers/contacts\";\r\nimport chat from \"./reducers/chat\";\r\nimport application from \"./reducers/application\";\r\n\r\nconst rootReducer = combineReducers({\r\n  profile,\r\n  contacts,\r\n  chat,\r\n  application,\r\n});\r\n\r\nconst logger = createLogger({\r\n  collapsed: true,\r\n  diff: true,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux\";\r\nimport \"./index.css\";\r\nimport \"normalize.css\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}